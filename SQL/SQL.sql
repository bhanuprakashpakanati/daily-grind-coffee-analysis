SELECT
	HOUR_OF_DAY,
	PAYMENT_METHOD,
	SALE_PRICE,
	PRODUCT,
	TIME_OF_DAY,
	[WEEKDAY],
	MONTH_NAME,
	WEEKDAYSORT,
	MONTHSORT,
	[DATE],
	[TIME]
FROM COFFEE;

---A. Sales & Revenue Analysis

---A1. Overall Performance:
--What is the total revenue generated over the entire period?
SELECT 
	SUM(SALE_PRICE) AS TOTAL_REVENUE_GENERATED
FROM COFFEE;

--What is the total number of orders (transactions)?
SELECT 
	COUNT(*) AS TOTAL_ORDERS
FROM COFFEE;

--What is the Average Order Value (AOV)?
SELECT
	AVG(SALE_PRICE) AS AVG_ORDER_VALUE
FROM COFFEE;

---A2.Trend Analysis:
--What are the monthly revenue trends? Is the business growing?
SELECT
	MONTH_NAME,
	SUM(SALE_PRICE) AS MONTHLY_REVENUE,
	AVG(SALE_PRICE) AS AVG_MONTHLY_REVENUE
FROM COFFEE
GROUP BY MONTH_NAME;

--Which are the top 3 and bottom 3 months by revenue?
--TOP 3
SELECT TOP 3
	MONTH_NAME,
	MONTHSORT,
	SUM(SALE_PRICE) AS MONTHLY_REVENUE
FROM COFFEE
GROUP BY MONTH_NAME,MONTHSORT
ORDER BY MONTHLY_REVENUE DESC;

--BOTTOM 3
SELECT TOP 3
	MONTH_NAME,
	MONTHSORT,
	SUM(SALE_PRICE) AS MONTHLY_REVENUE
FROM COFFEE
GROUP BY MONTH_NAME,MONTHSORT
ORDER BY MONTHLY_REVENUE ASC;

---How does revenue vary by day of the week? Which days are the most and least profitable?
SELECT
	[WEEKDAY],
	WEEKDAYSORT,
	COUNT(*) AS TOTAL_ORDERS,
	SUM(SALE_PRICE) AS DAILY_REVENUE,
	AVG(SALE_PRICE) AS AVG_ORDER_VALUE
FROM COFFEE
GROUP BY [WEEKDAY],WEEKDAYSORT
ORDER BY WEEKDAYSORT;

--Most Profitable
SELECT TOP 1
	[WEEKDAY],
	WEEKDAYSORT,
	COUNT(*) AS TOTAL_ORDERS,
	SUM(SALE_PRICE) AS DAILY_REVENUE,
	AVG(SALE_PRICE) AS AVG_ORDER_VALUE
FROM COFFEE
GROUP BY [WEEKDAY],WEEKDAYSORT
ORDER BY DAILY_REVENUE DESC;

--Least Profitable
SELECT TOP 1
	[WEEKDAY],
	WEEKDAYSORT,
	COUNT(*) AS TOTAL_ORDERS,
	SUM(SALE_PRICE) AS DAILY_REVENUE,
	AVG(SALE_PRICE) AS AVG_ORDER_VALUE
FROM COFFEE
GROUP BY [WEEKDAY],WEEKDAYSORT
ORDER BY DAILY_REVENUE ASC;

---A3.Hourly & Time-of-Day Performance:
--What are the peak revenue hours of the day?
SELECT
	HOUR_OF_DAY,
	COUNT(*) AS TRANSACTION_COUNT,
	SUM(SALE_PRICE) AS HOUR_REVENUE,
	AVG(SALE_PRICE) AS AVG_OREDER_VALUE
FROM COFFEE
GROUP BY HOUR_OF_DAY
ORDER BY HOUR_REVENUE DESC;

--How does revenue break down across Time_of_Day (Morning, Afternoon, Night)?
SELECT
	TIME_OF_DAY,
	COUNT(*) AS TRANSACTION_COUNT,
	SUM(SALE_PRICE) AS TIME_REVENUE,
	AVG(SALE_PRICE) AS AVG_OREDER_VALUE
FROM COFFEE
GROUP BY TIME_OF_DAY
ORDER BY TIME_REVENUE DESC;

---B. Product Performance & Menu Optimization

---B1. Best & Worst Sellers:
--Rank all coffee products by the number of orders and by total revenue generated.
SELECT
	PRODUCT,
	SUM(SALE_PRICE) AS TOTAL_REVENUE,
	AVG(SALE_PRICE) AS AVG_REVENUE,
	COUNT(*) AS ORDER_COUNT
FROM COFFEE
GROUP BY PRODUCT
ORDER BY ORDER_COUNT DESC;

--What are the top 5 most popular products?
SELECT TOP 5
	PRODUCT,
	COUNT(*) AS ORDER_COUNT,
	SUM(SALE_PRICE) AS TOTAL_REVENUE
FROM COFFEE
GROUP BY PRODUCT
ORDER BY ORDER_COUNT DESC;

---B2. Pricing Analysis:
--Is there a correlation between price (money) and popularity? Are customers favoring premium or budget options?
WITH PRODUCTSTATS AS(
	SELECT
		PRODUCT,
		COUNT(*) AS ORDER_COUNT,
		SUM(SALE_PRICE) AS TOTAL_REVENUE,
		AVG(SALE_PRICE) AS AVG_PRICE
	FROM COFFEE
	GROUP BY PRODUCT
)
SELECT
	PRODUCT,
	ORDER_COUNT,
	TOTAL_REVENUE,
	AVG_PRICE,
	CASE
		WHEN AVG_PRICE > (SELECT AVG(SALE_PRICE) FROM COFFEE) THEN 'PREMIUM'
		ELSE 'BUDGET'
	END AS PRICE_CATEGORY
FROM PRODUCTSTATS
ORDER BY ORDER_COUNT DESC;

--Calculate the total revenue contribution (%) of each product.
SELECT
	PRODUCT,
	COUNT(*) AS ORDER_COUNT,
	SUM(SALE_PRICE) AS TOTAL_REVENUE,
	AVG(SALE_PRICE) AS AVG_PRICE,
	ROUND(SUM(SALE_PRICE)*100.0/(SELECT SUM(SALE_PRICE) FROM COFFEE),2) AS REVENUE_PERCENTAGE
FROM COFFEE
GROUP BY PRODUCT
ORDER BY TOTAL_REVENUE DESC;

---C. Customer Behavior & Peak Hours
---C1. Busiest Times:
--Identify the busiest hours of the day based on the volume of transactions (not just revenue).
SELECT
	HOUR_OF_DAY,
	COUNT(*) AS TRANSACTION_COUNT
FROM COFFEE
GROUP BY HOUR_OF_DAY
ORDER BY TRANSACTION_COUNT DESC;

--Are the busiest hours the same on weekdays (Mon-Fri) vs. weekends (Sat-Sun)?
SELECT
	HOUR_OF_DAY,
	COUNT(*) AS TRANSACTION_COUNT,
	CASE
		WHEN [WEEKDAY] IN ('SAT','SUN') THEN  'WEEKEND'
		ELSE '[WEEKDAY]'
	END AS DAY_TYPE
FROM COFFEE
GROUP BY 
		HOUR_OF_DAY,
		CASE WHEN [WEEKDAY] IN ('SAT','SUN') THEN  'WEEKEND' ELSE '[WEEKDAY]' END
ORDER BY DAY_TYPE,TRANSACTION_COUNT DESC;

---C2. Weekday vs. Weekend Patterns:
--Compare the average number of daily transactions and revenue for weekends vs. weekdays.
SELECT
	CASE
		WHEN [WEEKDAY] IN('SAT', 'SUN') THEN 'WEEKEND'
		ELSE '[WEEKDAY]'
	END AS DAY_TYPE,
	COUNT(*) AS TOTAL_TRANSACTIONS,
	COUNT(DISTINCT [DATE]) AS DAYS_COUNT,
	COUNT(*) * 1.0/COUNT(DISTINCT [DATE]) AS AVG_DAILY_TRANSACTIONS,
	SUM(SALE_PRICE) AS TOTAL_REVENUE,
	SUM(SALE_PRICE) * 100.0/COUNT(DISTINCT [DATE]) AS AVG_DAILY_REVENUE
FROM COFFEE
GROUP BY CASE WHEN [WEEKDAY] IN ('SAT','SUN') THEN 'WEEKEND' ELSE '[WEEKDAY]' END;

---D. Pricing & Payment Analysis
---D1.	Payment Methods:

--What percentage of transactions are made by card? (The data suggests all are card, but confirm this).
SELECT
	PAYMENT_METHOD,
	COUNT(*) *100.0 / (SELECT COUNT(*) FROM COFFEE) AS [PERCENTAGE],
	COUNT(*) AS TRANSACTION_COUNT
FROM COFFEE
GROUP BY PAYMENT_METHOD;

---D2. Price Changes:
--I notice the money values change at certain points (e.g., Latte price changes from 38.7 to 37.72). 
--Can you identify the exact dates when prices for key items (e.g., Latte, Americano, Cappuccino) were changed?
WITH PRICE_CHANGES AS(
			SELECT
				PRODUCT,
				SALE_PRICE,
				[DATE],
				LAG(SALE_PRICE) OVER (PARTITION BY PRODUCT ORDER BY [DATE]) AS PREV_PRICE,
				LAG([DATE]) OVER (PARTITION BY PRODUCT ORDER BY [DATE]) AS PREV_DATE
			FROM COFFEE
),
CHANGE_POINTS AS (
		SELECT
			PRODUCT,
			SALE_PRICE,
			PREV_PRICE,
			[DATE] AS CHANGE_DATE,
			PREV_DATE,
			CASE
				WHEN SALE_PRICE != PREV_PRICE THEN 1 
				ELSE 0 
			END AS PRICE_CHANGED
		FROM PRICE_CHANGES
		WHERE PREV_PRICE IS NOT NULL
)
SELECT
	PRODUCT,
	PREV_PRICE AS OLD_PRICE,
	SALE_PRICE AS NEW_PRICE,
	CHANGE_DATE,
	ROUND(((SALE_PRICE-PREV_PRICE)*100.0/ PREV_PRICE),2) AS PRICE_CHANGE_PERCENT
FROM CHANGE_POINTS
WHERE PRICE_CHANGED = 1
ORDER BY PRODUCT, CHANGE_DATE;

-- SPECIFIC QUERIES FOR DELIVERABLES
-- Query 1: Daily Revenue Trend (For line chart)
SELECT
	[DATE],
	SUM(SALE_PRICE) AS DAILY_REVENUE,
	COUNT(*) AS DAILY_ORDERS
FROM COFFEE
GROUP BY [DATE]
ORDER BY [DATE];

-- Query 2: Top 5 Products by Revenue (For bar chart)
SELECT TOP 5
	PRODUCT,
	SUM(SALE_PRICE) AS TOTAL_REVENUE
FROM COFFEE
GROUP BY PRODUCT
ORDER BY TOTAL_REVENUE DESC;

-- Query 3: Sales Distribution by Hour of the Day (For line/bar chart)
SELECT
	HOUR_OF_DAY,
	SUM(SALE_PRICE) AS HOURLY_REVENUE,
	COUNT(*) AS TRANSACTIONS_COUNT
FROM COFFEE
GROUP BY HOUR_OF_DAY
ORDER BY HOUR_OF_DAY;

-- Query 4: Weekday Revenue Comparison (For bar chart)
SELECT
	[WEEKDAY],
	WEEKDAYSORT,
	AVG(DAILY_REVENUE) AS AVG_DAILY_REVENUE
FROM(
	SELECT
		[DATE],
		[WEEKDAY],
		WEEKDAYSORT,
		SUM(SALE_PRICE) AS DAILY_REVENUE
	FROM COFFEE
	GROUP BY [DATE],[WEEKDAY],WEEKDAYSORT
) AS DAILY_SALES
GROUP BY [WEEKDAY], WEEKDAYSORT
ORDER BY WEEKDAYSORT;

-- Query 5: Monthly Sales Summary (Table output)
SELECT
	MONTH_NAME,
	MONTHSORT,
	YEAR([DATE]) AS [YEAR],
	COUNT(*) AS ORDER_COUNT,
	SUM(SALE_PRICE) AS TOTAL_REVENUE,
	ROUND(SUM(SALE_PRICE)/COUNT(*),2) AS AVG_ORDER_VALUE
FROM COFFEE
GROUP BY MONTH_NAME,MONTHSORT,YEAR([DATE])
ORDER BY YEAR([DATE]),MONTHSORT;